[package]
name = "once_cell"
version = "1.2.0"
authors = ["Aleksey Kladov <aleksey.kladov@gmail.com>"]
license = "MIT OR Apache-2.0"
edition = "2018"

description = "Single assignment cells and lazy values."
readme = "README.md"
documentation = "https://docs.rs/once_cell"

repository = "https://github.com/matklad/once_cell"
keywords = ["lazy", "static"]
categories = ["rust-patterns", "memory-management"]

exclude = ["*.png", "*.svg", "/Cargo.lock.min", "/.travis.yml", "/run-miri-tests.sh", "rustfmt.toml"]

[dependencies]
# Uses parking_lot to implement once_cell::sync::OnceCell.
# This makes not speed difference, but makes each OnceCell<T>
# for up to two bytes smaller, depending on the size of the T.
parking_lot = { version = "0.9.0", optional = true }

[dev-dependencies]
lazy_static = "1.0.0"
crossbeam-utils = "0.6.0"
regex =  "1.2.0"

[features]
default = ["std"]
# Enables `once_cell::sync` module.
std = []

[[example]]
name = "reentrant_init_deadlocks"
required-features = ["std"]

[[example]]
name = "bench"
required-features = ["std"]

[[example]]
name = "bench_vs_lazy_static"
required-features = ["std"]

[[example]]
name = "lazy_static"
required-features = ["std"]

[[example]]
name = "regex"
required-features = ["std"]
